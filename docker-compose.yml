version: '3.7'

volumes:
  data-db:
  data-airflow-postgres:

services:

  db:
    image: postgres:10.3
    expose:
      - 5432
    volumes:
      - ./postgres:/opt/postgres
      - data-db:/var/lib/postgresql/data
    environment:
      # TODO: change this password, currently checked into git
      POSTGRES_PASSWORD: A224697C73DDC7439E35E7272909246D0AB8E5BBE
      POSTGRES_USER: gitsu
      POSTGRES_DB: gitsu

  # Service for ETL using Airflow
  etl:
    build: 
      context: etl/.
    volumes:
      - ./etl:/usr/local/etl
      - ./:/opt/jiu_gitsu_root
    depends_on:
      - db
      - airflow-postgres
    environment:
      CONFIG_FILES: 'base.yaml:/opt/jiu_gitsu_root/local_settings.yaml'

      # Airflow
      
      POSTGRES_HOST: airflow-postgres
      POSTGRES_PORT: 5432      
      POSTGRES_DB: ${AIRFLOW_POSTGRES_DB}
      POSTGRES_USER: ${AIRFLOW_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_POSTGRES_PASSWORD}

      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      #FERNET_KEY: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: 120 # Prevent airflow from reloading the dags all the time and set. This is the main setting that reduces CPU load in the scheduler
      AIRFLOW__SCHEDULER__SCHEDULER_MAX_THREADS: 1 # This should be set to (CPU Cores - 1)            
      # AIRFLOW__CORE__REMOTE_LOGGING: True
      # AIRFLOW__CORE__LOG_FILENAME_TEMPLATE: {{ ti.dag_id }}.lo
      # AIRFLOW__CORE__DAGS_FOLDER: /usr/local/etl/dags
      AIRFLOW__CORE__BASE_LOG_FOLDER: /usr/local/etl/untracked_logs
    ports:
        - "8080:8080"
    command: webserver
    networks:
      - airflow

  airflow-postgres:
    image: postgres:10.3
    expose:
        - 5432
    volumes:
      - data-airflow-postgres:/var/lib/postgresql/data
    environment:
        POSTGRES_USER: ${AIRFLOW_POSTGRES_USER}
        POSTGRES_PASSWORD: ${AIRFLOW_POSTGRES_PASSWORD}
        POSTGRES_DB: ${AIRFLOW_POSTGRES_DB}
    networks:
      - airflow

  # Service for Analytics
  # analytics:
  #   build: 
  #     context: analytics/.
  #     dockerfile: Dockerfile-dev 
  #   volumes:
  #     - ./analytics:/opt/analytics
  #     - ./:/opt/gitsu_root
  #   ports:
  #     - 8888:8888
  #   depends_on:
  #     - db
  #   environment:
  #     JUPYTER_CONFIG_DIR: '/opt/analytics/'       
  #     JUPYTER_PASSWORD: 'abc123'    
  #     JUPYTER_ENABLE_LAB: 'yes'
  #     CONFIG_FILES: 'base.yaml:/opt/gitsu_root/local_settings.yaml'

  # # Service for Analytics
  # gitsu_web:
  #   build: ./gitsu_web/.
  #   volumes:
  #     - ./gitsu_web/src:/go/src
  #   command: watcher -run main
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - db
  #   links:
  #     - db

networks:
  airflow:
    driver: bridge
